<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.security.provisioning.InMemoryUserDetailsManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
    <fullyQualifiedTypeName name="com.example.demo.config.RsaKeyProperties"/>
    <fullyQualifiedTypeName name="java.security.interfaces.RSAPrivateKey"/>
    <fullyQualifiedTypeName name="java.security.interfaces.RSAPublicKey"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.NimbusJwtDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.JwtDecoder"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.RSAKey.Builder"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.JWK"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.RSAKey"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.source.JWKSource"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.JWKSet"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.proc.SecurityContext"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.source.ImmutableJWKSet"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.NimbusJwtEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.JwtEncoder"/>
    <fullyQualifiedTypeName name="org.apache.tomcat.util.net.openssl.ciphers.Authentication"/>
    <fullyQualifiedTypeName name="java.time.Instant"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.JwtClaimsSet"/>
    <fullyQualifiedTypeName name="java.time.temporal.ChronoUnit"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.JwtEncoderParameters"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="java.util.logging.Logger"/>
    <fullyQualifiedTypeName name="ch.qos.logback.classic.Logger"/>
    <fullyQualifiedTypeName name="org.apache.logging.log4j.Logger"/>
    <fullyQualifiedTypeName name="org.jboss.logging.Logger"/>
    <fullyQualifiedTypeName name="java.lang.System.Logger"/>
    <fullyQualifiedTypeName name="com.example.demo.service.TokenService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
    <fullyQualifiedTypeName name="javax.servlet.Filter"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
</qualifiedTypeNameHistroy>
